@page "/login/{RedirectToPath?}"
@using Services
@using Travel_App_Web.Pages
@inject NavigationManager NavigationManager
@inject UserStateService UserStateService

<style>
    .overlay::before {
        content: '';
        background-image: url('/icons/blurry-1800136.jpg');
        background-size: cover;
        position: fixed;
        width: 100%;
        height: 100%;
        opacity: 0.9;
    }

    .add-logreg-container-styles {
        border-radius: 20px;
        background-color: slateblue;
        width: fit-content;
        height: 300px;
        display: inline-flex;
        align-items: center;
        overflow: visible;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    }

    .greeting {
        display: flex;
        align-items: center;
        flex-direction: column;
        width: 400px;
        color: white;
    }
</style>

<PageTitle>@(Login ? "Login" : "Registration")</PageTitle>

<div class="overlay" style="background-color: rgba(0, 0, 0, 1);">
        <div class="logreg-container add-logreg-container-styles">
        <div class="greeting">
            <h4 class="card-title" style="font-size: 28px;">@(Login ? "Login" : "Registration")</h4>
            <h4 class="card-title" style="font-size: 28px;">Wanderlust Explorers</h4>
            <img src="icons/icons8-колизей-100.png">
        </div>
        @if (Login)
        {
            <LoginComponent OnExit="Close" OnRegistration="ShowRegistartion" />
        }
        else
        {
            <RegisterComponent OnExit="Close" OnLogin="ShowLogin" />
        }
    </div>
</div>

@code {
    [Parameter]
    public string RedirectToPath { get; set; } = string.Empty;
    private bool Login { get; set; } = true;

    private void ShowLogin() => Login = true;

    private void ShowRegistartion() => Login = false;

    protected override Task OnInitializedAsync()
    {
        if (UserStateService.User is not null)
            NavigationManager.NavigateTo(RedirectToPath.Replace('_', '/'));
        return base.OnInitializedAsync();
    }

    private async Task Close()
    {
        if (UserStateService.User is null)
            NavigationManager.NavigateTo("");
        else
            NavigationManager.NavigateTo(string.IsNullOrEmpty(RedirectToPath) ? "" : RedirectToPath.Replace('_', '/'));
    }
}